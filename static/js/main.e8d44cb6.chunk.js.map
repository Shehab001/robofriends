{"version":3,"sources":["components/Cards.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Cards","name","email","id","className","alt","src","CardList","robots","CardArray","map","user","i","username","Scroll","props","style","overflow","height","padding","children","SearchBox","searchField","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","responce","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZD,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACvB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACA,6BAAKF,IACL,4BAAIC,WCMDK,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAUD,EAAOE,KAAI,SAACC,EAAKC,GAC7B,OAAO,cAAC,EAAD,CAAeT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMY,SAAUL,EAAOI,GAAGC,SAAUX,MAAOM,EAAOI,GAAGV,OAA1FU,MAEvB,OACI,8BACGH,KCCIK,EARF,SAACC,GACV,OACA,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,QAAQC,QAAQ,QAAtD,SACKJ,EAAMK,YCSAC,EAZG,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC5B,OACI,qBAAKnB,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACjBoB,KAAK,SACLC,YAAY,cACZC,SAAUH,OCePI,E,kDApBX,WAAYZ,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAM,CACPC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,uCAEJG,KAAKjB,MAAMK,a,GAhBCc,aC8CZC,G,wDAxCX,aAAc,IAAD,8BACT,gBAaJC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAACX,YAAYe,EAAMC,OAAOC,SAbxC,EAAKX,MAAQ,CACTpB,OAAQ,GACRc,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACzB,OAAOoC,S,oBAOvC,WACI,MAA6BZ,KAAKJ,MAA1BpB,EAAR,EAAQA,OAAOc,EAAf,EAAeA,YAETuB,EAAerC,EAAOsC,QAAO,SAAAC,GAC/B,OAAOA,EAAM9C,KAAK+C,cAAcC,SAAS3B,EAAY0B,kBAGzD,OAAQxC,EAAO0C,OAGP,sBAAK9C,UAAU,KAAf,UACI,8CACA,cAAC,EAAD,CAAWmB,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU5B,OAAQqC,WAPjC,6C,GA3BKX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.e8d44cb6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Cards = ({name,email,id}) => {\r\n    return(\r\n        <div className='bg-light-green dib br3 ma2 pa3 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport Cards from './Cards';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const CardArray=robots.map((user,i)=>{\r\n        return <Cards key={i} id={robots[i].id} name={robots[i].name} username={robots[i].username} email={robots[i].email}/>\r\n    })\r\n    return(\r\n        <div>\r\n          {CardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n    <div style={{overflow:'scroll',height:'450px',padding:'10px'}}>\r\n        {props.children}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react'\r\n\r\nconst SearchBox = ({searchField,searchChange}) =>{\r\n    return(\r\n        <div className='pa4'>\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n            type='search'\r\n            placeholder='Search Here'\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox; ","import React,{ Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oopps</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n}\r\n \r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll'\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(responce=>responce.json())\r\n        .then(users=>this.setState({robots:users}));\r\n    }\r\n\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchField:event.target.value})\r\n    }\r\n    \r\n    render(){\r\n        const { robots,searchField }=this.state;\r\n\r\n        const filteredRobots=robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n\r\n        return !robots.length ?\r\n             <h1>Loading</h1> :\r\n           (\r\n                <div className='tc'>\r\n                    <h1>ROBO FRIENDS</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}